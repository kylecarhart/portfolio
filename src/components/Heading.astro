---

/**
 *  Heading component for the home page.
 *  @param {string} title - The title of the heading.
 *  @param {string} align - The alignment of the heading.
 */
interface Props {
  title: string;
  url?: string;
  align?: 'left' | 'right';
}

const { title, align = 'left', url } = Astro.props;
---

<div class="space-y-12 heading">
  <div class:list={[
    'flex',
    {"sm:-mr-8 text-right flex-row-reverse": align === 'right'}, 
    {"sm:-ml-8 text-left": align === 'left'}
  ]}>
    <div class="hidden sm:block text-primary font-mono font-bold w-8 text-center text-3xl">+</div>
    <div class="space-y-4">
      <h2 class="font-mono italic text-4xl">{url ? <a href={url} target="_blank" rel="noopener noreferrer">{title}</a> : title}</h2>
      <p class="text-xl max-w-prose"><slot name="description"/></p>
    </div>
  </div>
  <slot />
</div>

<style>
  .heading {
    position: relative;
    opacity: 0;
    top: 10px;
    transition: all 0.5s ease-out;
  }

  .heading.animate-fade-in {
    opacity: 1;
    top: 0px;
  }
</style>


<script>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-fade-in');
      }
    });
  }, { threshold: 0.6 });

  // Scripts are only ran once, not per usage of the component, so we need to
  // handle any AND all headings on the page.
  const headings = document.querySelectorAll('.heading');

  if (headings) {
    headings.forEach((heading) => {
      observer.observe(heading);
    });
  }
</script>
